apiVersion: v1
kind: ServiceAccount
metadata:
  name: broker
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: endpoint-reader
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: endpoint-reader
subjects:
- kind: ServiceAccount
  name: broker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: endpoint-reader
---
apiVersion: v1
kind: Service
metadata:
  name: broker
  labels:
    app: broker
spec:
  ports:
    - port: 5672
      name: amqp
  selector:
    app: broker
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: broker
spec:
  serviceName: broker
  selector:
    matchLabels:
      app: broker
  replicas: 3
  template:
    metadata:
      labels:
        app: broker
    spec:
      serviceAccountName: broker
      terminationGracePeriodSeconds: 10
      containers:
      - name: broker
        image: broker:1.0
        imagePullPolicy: Never
        ports:
          - name: amqp
            containerPort: 5672
        volumeMounts:
          - name: broker
            mountPath: /var/lib/rabbitmq
        livenessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 10
          timeoutSeconds: 10
        env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: RABBITMQ_ERLANG_COOKIE
            valueFrom:
              secretKeyRef:
                name: broker-secrets
                key: erlang.cookie
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_IP)"
          - name: K8S_SERVICE_NAME
            value: "broker"
  volumeClaimTemplates:
    - metadata:
        name: broker
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
